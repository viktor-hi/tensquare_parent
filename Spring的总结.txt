Spring的总结
一、Spring的IOC
   1. IOC的作用:将对象配置到Spring的核心容器
   2. 使用配置文件的方式进行IOC:
      1. 调用无参构造函数
	     <bean id="唯一标识" class="要创建对象的类的全限定名"></bean>
	  2. 静态工厂的方式
	     <bean id="唯一标识" class="静态工厂的全限定名" factory-method="要调用的静态工厂的方法名"></bean>
	  3. 实例工厂的方式
	     1. 将实例工厂对象配置到核心容器
		    <bean id="实例工厂的唯一标识" class="实例工厂的全限定名"></bean>
		 2. 使用实例工厂创建对象
		    <bean id="唯一标识" factory-bean="实例工厂的唯一标识" factory-method="要调用的实例工厂的方法"></bean>
			
   3. 使用注解的方式进行IOC
      1. Component注解
	  2. Service注解 使用在业务层
	  3. Controller注解 使用在表现层，在springmvc中使用
	  4. Repository注解  使用在Dao层
	  
   4. 配置Bean的范围和生命周期:
      1. 配置文件的方式:
	     指定bean标签的scope属性配置bean的范围
		 指定bean标签的init-method属性配置bean的初始化方法
		 指定bean标签的destroy-method属性配置bean的销毁方法
		 
	  2. 注解的方式进行配置:
	     Scope注解配置bean的范围
		 PostConstruct注解配置bean的初始化方法
		 PreDestroy注解配置Bean的销毁方法

二、Spring的核心容器，我们使用的接口是ApplicationContext
    1. 如果是使用配置文件，那么我们使用它的ClassPathXmlApplicationContext实现类
	2. 如果是使用纯注解，那么我们使用它的AnnotationConfigApplicationContext实现类

三、依赖注入
    1. 配置文件的方式进行依赖注入
       1. 使用构造函数的方式注入
	      <construct-arg name="属性名" value/ref="属性值">
	   2. 使用set方法进行注入
	      <property name="" value/ref="">
		  
	   3. 如果是要注入简单类型的数据，那么我们使用value属性赋值
	   4. 如果是要注入核心容器中的Bean，那么我们使用ref属性引入要注入的Bean对象的id
	   
    2. 使用注解的方式进行注入
	   1. Value注解，只能注入简单类型的数据
	   2. Autowired注解，只能注入Bean对象，它会进行自动状态
	      它可以结合Qualifier注解进行手动装配
	   3. Resource注解进行自动和手动装配
	   
四、使用纯注解开发
    1. 写一个配置类代替配置文件，并且给配置类加上Configuration注解
	2. 在配置类上使用ComponentScan注解进行包扫描
	3. 在配置类中添加方法，用于创建对象存放到核心容器，并且在方法上添加Bean注解
	
	4. 纯注解开发中的其它注解:
	   1. PropertySource 注解，可以引入外部的properties配置文件
	   2. Import注解，可以引入其它的配置类
	   
    5. 如果使用纯注解开发，那么我们就要使用AnnotationConfigApplicationContext核心容器
	
五、使用Spring集成Junit
    1. 引入spring-test依赖
	2. 给测试类添加@RunWith(Spring4JunitClassRunner.class)
	3. 给测试类添加@ContextConfiguration(classes=配置类.class)
	
	  